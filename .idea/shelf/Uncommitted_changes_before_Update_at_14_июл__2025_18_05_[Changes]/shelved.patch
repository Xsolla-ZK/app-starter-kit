Index: apps/extension/src/background.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import {CacheStrategy, Communicator, EextensionBridge, generateId, ServiceWorkerRuntime,} from '@backpack/sdk';\r\nimport {browser} from './utils/browser-polyfill';\r\n\r\ndeclare const self: ServiceWorkerGlobalScope;\r\n\r\nbrowser.runtime.onInstalled.addListener((details: { reason: string; }) => {\r\n  console.log('Расширение установлено:', details);\r\n  if (details.reason === 'install') {\r\n    browser.storage.local.set({ installedAt: new Date().toISOString() });\r\n  }\r\n});\r\n\r\n\r\nconst origin = self.origin;\r\nconst sw = new ServiceWorkerRuntime({\r\n  logging: true,\r\n  caching: {\r\n    rules: [\r\n      {\r\n        pattern: /^chrome-extension:/,\r\n        strategy: CacheStrategy.NETWORK_ONLY,\r\n      },\r\n    ],\r\n  },\r\n});\r\n\r\nsw.init();\r\n\r\nconst bridge = new EextensionBridge({\r\n  bridgeId: 'main',\r\n  logging: true,\r\n});\r\n\r\nconst communicator = new Communicator(origin, bridge, { logging: true });\r\n\r\nsw.on('activated', (event) => {\r\n  console.log('[SW][event]: activated', event);\r\n});\r\n\r\ncommunicator.subscribeToWildcard('web3', 'connect', (message) => {\r\n  communicator.sendResponse({\r\n    id: generateId(),\r\n    origin: 'origin',\r\n    channel: 'web3',\r\n    event: 'connect',\r\n    requestId: message.id,\r\n    payload: {\r\n      status: true,\r\n      chainId: '0x1',\r\n    },\r\n  });\r\n});\r\n\r\ncommunicator.subscribeToWildcard('web3', 'eth_chainId', (message) => {\r\n  communicator.sendResponse({\r\n    id: generateId(),\r\n    origin: 'origin',\r\n    channel: 'web3',\r\n    event: 'eth_chainId',\r\n    requestId: message.id,\r\n    payload: '0x1',\r\n  });\r\n});\r\n\r\ncommunicator.subscribeToWildcard('web3', 'eth_accounts', (message) => {\r\n  communicator.sendResponse({\r\n    id: generateId(),\r\n    origin: 'origin',\r\n    channel: 'web3',\r\n    event: 'eth_accounts',\r\n    requestId: message.id,\r\n    payload: ['0x73eC0f1120340a461bb2f48223aF8Fb8996E3618'],\r\n  });\r\n});\r\n\r\ncommunicator.subscribeToWildcard('web3', 'eth_sendTransaction', (message) => {\r\n  console.log('!!![SWC][web3]: eth_signTransaction', message);\r\n  chrome.action.openPopup();\r\n  communicator.sendResponse({\r\n    id: generateId(),\r\n    origin: 'origin',\r\n    channel: 'web3',\r\n    event: 'eth_sendTransaction',\r\n    requestId: message.id,\r\n    payload: '0xtransaction',\r\n  });\r\n});\r\n\r\nsw.on('activating', (event) => {\r\n  console.log('[SW][event]: activating', event);\r\n});\r\n\r\ncommunicator.onError((error) => {\r\n  console.log('[SW][Ошибка]:', error);\r\n});\r\n\r\ncommunicator.on('connectionStateChanged', (event) => {\r\n  console.log('[SW][event]: verifyConnection', event);\r\n});\r\n\r\n// communicator.onMessage((message) => {\r\n//   console.log('[SW]:[new message]:', message);\r\n// });
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/apps/extension/src/background.ts b/apps/extension/src/background.ts
--- a/apps/extension/src/background.ts	(revision b24f16ffcb8103584162f4460c608bf7e2590f3c)
+++ b/apps/extension/src/background.ts	(date 1752490980320)
@@ -1,16 +1,21 @@
-import {CacheStrategy, Communicator, EextensionBridge, generateId, ServiceWorkerRuntime,} from '@backpack/sdk';
-import {browser} from './utils/browser-polyfill';
+import {
+  CacheStrategy,
+  Communicator,
+  EextensionBridge,
+  generateId,
+  ServiceWorkerRuntime,
+} from '@backpack/sdk';
+import { browser } from './utils/browser-polyfill';
 
 declare const self: ServiceWorkerGlobalScope;
 
-browser.runtime.onInstalled.addListener((details: { reason: string; }) => {
+browser.runtime.onInstalled.addListener((details: { reason: string }) => {
   console.log('Расширение установлено:', details);
   if (details.reason === 'install') {
     browser.storage.local.set({ installedAt: new Date().toISOString() });
   }
 });
 
-
 const origin = self.origin;
 const sw = new ServiceWorkerRuntime({
   logging: true,
@@ -100,4 +105,4 @@
 
 // communicator.onMessage((message) => {
 //   console.log('[SW]:[new message]:', message);
-// });
\ No newline at end of file
+// });
Index: backpack/sdk/src/transport/communicator/types/channel-method-map.types.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import type {MethodDefinition, SystemMethodsMap} from '@transport/communicator';\r\nimport type {ParamsOf, ReturnOf, Web3MethodLiterals,} from '@transport/communicator/types/rpc.methods.type';\r\nimport type {ProviderConnectInfo, ProviderMessage, ProviderRpcError} from 'viem';\r\n\r\nexport interface SwRuntimeMethodsMap {\r\n  // Выполнение команды\r\n  executeCommand: MethodDefinition<\r\n    {\r\n      command: string;\r\n      data?: Record<string, unknown>;\r\n    },\r\n    Record<string, unknown>\r\n  >;\r\n\r\n  // Получение списка доступных команд\r\n  getCommands: MethodDefinition<Record<string, never>, { commands: string[] }>;\r\n\r\n  // Управление кешем\r\n  cacheUrls: MethodDefinition<\r\n    { urls: string | string[]; cacheName?: string },\r\n    { success: boolean }\r\n  >;\r\n\r\n  clearCache: MethodDefinition<{ cacheName?: string }, { success: boolean }>;\r\n\r\n  // Команды жизненного цикла\r\n  skipWaiting: MethodDefinition<Record<string, never>, { success: boolean }>;\r\n\r\n  clientsClaim: MethodDefinition<Record<string, never>, { success: boolean }>;\r\n\r\n  // Получение информации о клиентах\r\n  getClients: MethodDefinition<\r\n    { includeUncontrolled?: boolean },\r\n    { clients: Array<{ id: string; type: string; url: string }> }\r\n  >;\r\n\r\n  // Отправка уведомлений\r\n  showNotification: MethodDefinition<\r\n    { title: string; options?: NotificationOptions },\r\n    { success: boolean }\r\n  >;\r\n\r\n  // Получение статуса SW Runtime\r\n  getRuntimeStatus: MethodDefinition<\r\n    Record<string, never>,\r\n    {\r\n      initialized: boolean;\r\n      cacheVersion: string;\r\n      clientsCount: number;\r\n      uptime: number;\r\n    }\r\n  >;\r\n}\r\n\r\nexport interface CommonSystemMethods {\r\n  ping: MethodDefinition<{ timestamp: number }, { timestamp: number; receivedAt: number }>;\r\n  pong: MethodDefinition<{ timestamp: number; receivedAt: number }, Record<string, unknown>>;\r\n  ack: MethodDefinition<{ messageId: string; timestamp: number }, { success: boolean }>;\r\n  connect: MethodDefinition<undefined, { status: boolean } & ProviderConnectInfo>;\r\n  disconnect: MethodDefinition<undefined, ProviderRpcError>;\r\n  chainChanged: MethodDefinition<undefined, { chainId: string }>;\r\n  accountsChanged: MethodDefinition<undefined, { accounts: string[] }>;\r\n  message: MethodDefinition<ProviderMessage, ProviderMessage>;\r\n  broadcast: MethodDefinition<\r\n    { message: string; timestamp: number },\r\n    { message: string; timestamp: number }\r\n  >;\r\n}\r\n\r\nexport type Web3MethodsMap = {\r\n  [K in Web3MethodLiterals]: MethodDefinition<ParamsOf<K>, ReturnOf<K>>;\r\n};\r\n\r\nexport type AllMethodsUnion = {\r\n  [C in Exclude<keyof ChannelMethodMap, '*'>]: keyof ChannelMethodMap[C];\r\n}[Exclude<keyof ChannelMethodMap, '*'>];\r\n\r\nexport type AllMethodDefinitions = {\r\n  [M in AllMethodsUnion]: MethodDefinition<unknown, unknown>;\r\n};\r\n\r\nexport type WildcardChannel = '*';\r\nexport type WildcardMethod = '*';\r\n\r\nexport interface WildcardMethodsMap extends AllMethodDefinitions {\r\n  '*': MethodDefinition<unknown, unknown>;\r\n}\r\n\r\nexport type ChannelMethodMap = {\r\n  web3: Web3MethodsMap & SystemMethodsMap;\r\n  swRuntime: SwRuntimeMethodsMap & SystemMethodsMap;\r\n  '*': WildcardMethodsMap;\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backpack/sdk/src/transport/communicator/types/channel-method-map.types.ts b/backpack/sdk/src/transport/communicator/types/channel-method-map.types.ts
--- a/backpack/sdk/src/transport/communicator/types/channel-method-map.types.ts	(revision b24f16ffcb8103584162f4460c608bf7e2590f3c)
+++ b/backpack/sdk/src/transport/communicator/types/channel-method-map.types.ts	(date 1752482779295)
@@ -1,6 +1,10 @@
-import type {MethodDefinition, SystemMethodsMap} from '@transport/communicator';
-import type {ParamsOf, ReturnOf, Web3MethodLiterals,} from '@transport/communicator/types/rpc.methods.type';
-import type {ProviderConnectInfo, ProviderMessage, ProviderRpcError} from 'viem';
+import type { MethodDefinition, SystemMethodsMap } from '@transport/communicator';
+import type {
+  ParamsOf,
+  ReturnOf,
+  Web3MethodLiterals,
+} from '@transport/communicator/types/rpc.methods.type';
+import type { ProviderConnectInfo, ProviderMessage, ProviderRpcError } from 'viem';
 
 export interface SwRuntimeMethodsMap {
   // Выполнение команды
Index: backpack/sdk/src/provider/provider.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import {\r\n  type AnyDeserializedMessage,\r\n  Communicator,\r\n  type MethodParams,\r\n  type MethodResult,\r\n  type Methods,\r\n} from '@transport/communicator';\r\nimport { EventEmitter, type EventEmitterOptions } from '@shared/eventEmitter';\r\nimport { LogLevel } from '@shared/logger';\r\nimport type { ProviderEventMap, ProviderRpcError } from '@backpack/sdk/provider/events';\r\nimport type { EIP1193Provider, ProviderConnectInfo, ProviderMessage } from 'viem';\r\nimport { serializeError, standardErrors } from 'zksync-sso/errors';\r\nimport { PageBridge } from '@transport/communicator/bridge/pageBridge';\r\nimport { PROVIDER_ERROR_MESSAGES } from '@backpack/sdk/provider/errors';\r\n\r\n// Constants\r\nconst DEFAULT_ORIGIN = 'https://xsollazk.com/wallet-demo/';\r\nconst REQUEST_TIMEOUT = 30000;\r\nconst ACCOUNTS_CACHE_TTL = 30000; // 30 секунд для кэша аккаунтов\r\n\r\nconst METHODS_REQUIRING_POPUP = [\r\n  'eth_sendTransaction',\r\n  'eth_signTransaction',\r\n  'eth_sign',\r\n  'personal_sign',\r\n  'eth_signTypedData',\r\n  'eth_signTypedData_v1',\r\n  'eth_signTypedData_v3',\r\n  'eth_signTypedData_v4',\r\n  'wallet_addEthereumChain',\r\n  'wallet_switchEthereumChain',\r\n  'wallet_watchAsset',\r\n];\r\n\r\ninterface IWalletProvider extends EventEmitter<ProviderEventMap>, EIP1193Provider {\r\n  readonly bridge: PageBridge;\r\n  readonly communicator: Communicator;\r\n  readonly isBackpackProvider: boolean;\r\n  readonly isEIP1193: boolean;\r\n  _isConnected: boolean;\r\n  _chainId: string | null;\r\n\r\n  request<T = unknown>(args: { method: string; params?: unknown }): Promise<T>;\r\n  request<M extends Methods<'web3'>, P extends MethodParams<'web3', M>>({\r\n    method,\r\n    params,\r\n  }: {\r\n    method: M;\r\n    params?: P;\r\n  }): Promise<MethodResult<'web3', M>>;\r\n  disconnect(): Promise<void>;\r\n  // EIP-1193 event methods\r\n  on(event: 'connect', listener: (info: ProviderConnectInfo) => void): this;\r\n  on(event: 'disconnect', listener: (error: ProviderRpcError) => void): this;\r\n  on(event: 'chainChanged', listener: (chainId: string) => void): this;\r\n  on(event: 'accountsChanged', listener: (accounts: string[]) => void): this;\r\n  on(event: 'message', listener: (message: ProviderMessage) => void): this;\r\n\r\n  removeListener(event: 'connect', listener: (info: ProviderConnectInfo) => void): this;\r\n  removeListener(event: 'disconnect', listener: (error: ProviderRpcError) => void): this;\r\n  removeListener(event: 'chainChanged', listener: (chainId: string) => void): this;\r\n  removeListener(event: 'accountsChanged', listener: (accounts: string[]) => void): this;\r\n  removeListener(event: 'message', listener: (message: ProviderMessage) => void): this;\r\n}\r\n\r\nexport class Provider extends EventEmitter<ProviderEventMap> implements IWalletProvider {\r\n  // Static properties for optimization\r\n  private static readonly SUPPORTED_CHAINS = new Set([\r\n    '0x1', // Ethereum Mainnet\r\n    '0x5', // Goerli\r\n    '0x89', // Polygon\r\n    '0x38', // BSC\r\n    '0xa86a', // Avalanche\r\n    '0xa4b1', // Arbitrum\r\n    '0xa', // Optimism\r\n  ]);\r\n\r\n  private static readonly SUPPORTED_METHODS = new Set<Methods<'web3'>>([\r\n    // Standard Web3 methods\r\n    'eth_accounts',\r\n    'eth_requestAccounts',\r\n    'eth_chainId',\r\n    'net_version',\r\n    'eth_getBalance',\r\n    'eth_sendTransaction',\r\n    'eth_signTransaction',\r\n    'eth_sign',\r\n    'personal_sign',\r\n    'eth_signTypedData_v4',\r\n    // Network management methods\r\n    'wallet_addEthereumChain',\r\n    'wallet_switchEthereumChain',\r\n    'wallet_getPermissions',\r\n    'wallet_requestPermissions',\r\n    'wallet_watchAsset',\r\n    // Additional methods\r\n    'eth_blockNumber',\r\n    'eth_call',\r\n    'eth_estimateGas',\r\n    'eth_gasPrice',\r\n    'eth_getCode',\r\n    'eth_getTransactionCount',\r\n    'eth_getTransactionReceipt',\r\n    'eth_getTransactionByHash',\r\n    'eth_getBlockByNumber',\r\n    'eth_getBlockByHash',\r\n    'eth_getLogs',\r\n  ]);\r\n\r\n  private static readonly AUTHENTICATED_METHODS = new Set<Methods<'web3'>>([\r\n    'eth_sendTransaction',\r\n    'eth_signTransaction',\r\n    'eth_sign',\r\n    'personal_sign',\r\n    'eth_signTypedData_v4',\r\n    'wallet_addEthereumChain',\r\n    'wallet_switchEthereumChain',\r\n    'wallet_watchAsset',\r\n  ]);\r\n\r\n  // Public properties\r\n  readonly bridge: PageBridge;\r\n  readonly communicator: Communicator;\r\n  readonly isBackpackProvider = true;\r\n  readonly isEIP1193 = true;\r\n  _isConnected = false;\r\n  _chainId: string | null = null;\r\n\r\n  // Private properties\r\n  private _accounts: string[] = [];\r\n  private _networkVersion: string | null = null;\r\n  private _accountsLastUpdated = 0;\r\n  private _chainIdLastUpdated = 0;\r\n  private readonly _supportedChains: Set<string>;\r\n  private readonly _supportedMethods: Set<Methods<'web3'>>;\r\n  private readonly _authenticatedMethods: Set<Methods<'web3'>>;\r\n\r\n  constructor(originUrl = location.origin, options: EventEmitterOptions = {}) {\r\n    super('WalletProvider', {\r\n      logging: options.logging ?? options.logLevel !== LogLevel.NONE,\r\n      logLevel: options.logLevel,\r\n    });\r\n\r\n    this._supportedChains = Provider.SUPPORTED_CHAINS;\r\n    this._supportedMethods = Provider.SUPPORTED_METHODS;\r\n    this._authenticatedMethods = Provider.AUTHENTICATED_METHODS;\r\n\r\n    this.bridge = new PageBridge({\r\n      bridgeId: 'main',\r\n      logging: true,\r\n    });\r\n\r\n    this.communicator = new Communicator(originUrl || DEFAULT_ORIGIN, this.bridge, {\r\n      logging: true,\r\n    });\r\n\r\n    this.initializeMessageHandler();\r\n  }\r\n\r\n  async request<M extends Methods<'web3'>, P extends MethodParams<'web3', M>>(args: {\r\n    method: M;\r\n    params?: P;\r\n  }): Promise<MethodResult<'web3', M>> {\r\n    const { method, params } = args;\r\n\r\n    try {\r\n      this.logger.debug(`request: ${method}`, params);\r\n\r\n      await this.validateConnectionState();\r\n      this.validateMethodSupport(method);\r\n      await this.validateAuthorizationIfNeeded(method);\r\n\r\n      if (method === 'eth_chainId') return this.getChainId(true);\r\n      if (method === 'eth_accounts') return this.getAccounts();\r\n      if (method === 'eth_requestAccounts') return this.requestAccounts();\r\n\r\n      if (METHODS_REQUIRING_POPUP.includes(method)) {\r\n        return this.handlePopupMethod(method);\r\n      }\r\n\r\n      return this.sendRpcRequest(method, params);\r\n    } catch (error) {\r\n      this.logger.error(`Ошибка при выполнении запроса ${method}:`, error);\r\n      return Promise.reject(serializeError(error, method));\r\n    }\r\n  }\r\n\r\n  async getAccounts(force = false): Promise<string[]> {\r\n    const now = Date.now();\r\n    const shouldRefresh =\r\n      force || this._accounts.length === 0 || now - this._accountsLastUpdated > ACCOUNTS_CACHE_TTL;\r\n\r\n    if (shouldRefresh) {\r\n      try {\r\n        const response = await this.communicator.send('web3', 'eth_accounts', undefined as never, {\r\n          requireAck: true,\r\n          bridgeId: this.bridge.bridgeId,\r\n        });\r\n\r\n        if (!Array.isArray(response.payload)) {\r\n          throw standardErrors.rpc.internal(PROVIDER_ERROR_MESSAGES.INVALID_ACCOUNTS_RESPONSE);\r\n        }\r\n\r\n        this._accounts = response.payload;\r\n        this._accountsLastUpdated = now;\r\n      } catch (error) {\r\n        this.logger.error('Ошибка при получении аккаунтов:', error);\r\n        throw standardErrors.rpc.internal({\r\n          message: PROVIDER_ERROR_MESSAGES.FAILED_GET_ACCOUNTS,\r\n          data: { originalError: error },\r\n        });\r\n      }\r\n    }\r\n\r\n    return this._accounts;\r\n  }\r\n\r\n  async debug() {\r\n    return {\r\n      isConnected: navigator.serviceWorker?.controller !== null,\r\n      bridgeId: this.bridge.bridgeId,\r\n      targetName: this.targetName,\r\n      events: this.eventNames(),\r\n      connectionStatus: this._isConnected ? 'connected' : 'disconnected',\r\n      lastAccountsUpdate: this._accountsLastUpdated,\r\n      lastChainIdUpdate: this._chainIdLastUpdated,\r\n    };\r\n  }\r\n\r\n  async disconnect(): Promise<void> {\r\n    try {\r\n      await this.communicator.send('web3', 'disconnect', undefined as never);\r\n      this.communicator.stopConnectionMonitoring();\r\n      this.resetState();\r\n      this.emitDisconnect(PROVIDER_ERROR_MESSAGES.USER_DISCONNECTED);\r\n    } finally {\r\n      this.bridge.destroy();\r\n      this.communicator.terminate();\r\n      this.logger.info('Провайдер успешно отключен');\r\n    }\r\n  }\r\n\r\n  async isConnected(): Promise<boolean> {\r\n    const connectionActive = await this.communicator.verifyConnection();\r\n    if (!connectionActive) {\r\n      this._isConnected = false;\r\n    }\r\n    return this._isConnected;\r\n  }\r\n\r\n  private async validateConnectionState(): Promise<void> {\r\n    const isConnected = await this.isConnected();\r\n    if (!isConnected) {\r\n      throw standardErrors.provider.disconnected(PROVIDER_ERROR_MESSAGES.DISCONNECTED);\r\n    }\r\n  }\r\n\r\n  private validateMethodSupport(method: Methods<'web3'>): void {\r\n    if (!this._supportedMethods.has(method)) {\r\n      throw standardErrors.rpc.methodNotSupported(\r\n        PROVIDER_ERROR_MESSAGES.METHOD_NOT_SUPPORTED(method),\r\n      );\r\n    }\r\n  }\r\n\r\n  private async validateAuthorizationIfNeeded(method: Methods<'web3'>): Promise<void> {\r\n    if (this._authenticatedMethods.has(method)) {\r\n      const isAuthorized = await this.isAuthorized();\r\n      if (!isAuthorized) {\r\n        throw standardErrors.provider.unauthorized(PROVIDER_ERROR_MESSAGES.UNAUTHORIZED);\r\n      }\r\n    }\r\n  }\r\n\r\n  private handlePopupMethod(method: string): never {\r\n    this.logger.warn(`Метод ${method}, требующий popup, вызван без реализации`);\r\n    throw standardErrors.rpc.methodNotSupported(\r\n      PROVIDER_ERROR_MESSAGES.POPUP_METHOD_NOT_IMPLEMENTED(method),\r\n    );\r\n  }\r\n\r\n  private async sendRpcRequest<M extends Methods<'web3'>, P extends MethodParams<'web3', M>>(\r\n    method: M,\r\n    params?: P,\r\n  ): Promise<MethodResult<'web3', M>> {\r\n    const response = await this.communicator.send('web3', method, params, {\r\n      requireAck: true,\r\n      timeout: REQUEST_TIMEOUT,\r\n      bridgeId: this.bridge.bridgeId,\r\n    });\r\n\r\n    return response.payload;\r\n  }\r\n\r\n  private async getChainId(force = false) {\r\n    const now = Date.now();\r\n    const shouldRefresh =\r\n      force || !this._chainId || now - this._chainIdLastUpdated > ACCOUNTS_CACHE_TTL;\r\n\r\n    if (shouldRefresh) {\r\n      try {\r\n        const response = await this.communicator.send('web3', 'eth_chainId', undefined as never, {\r\n          requireAck: true,\r\n          bridgeId: this.bridge.bridgeId,\r\n        });\r\n\r\n        const chainId = this.normalizeChainId(response.payload);\r\n\r\n        if (this.isSupportedChain(chainId)) {\r\n          this._chainId = chainId;\r\n        } else {\r\n          this._isConnected = false;\r\n          throw standardErrors.provider.unsupportedChain(\r\n            PROVIDER_ERROR_MESSAGES.CHAIN_NOT_SUPPORTED(chainId),\r\n          );\r\n        }\r\n\r\n        this._chainIdLastUpdated = now;\r\n        return this._chainId;\r\n      } catch (error) {\r\n        this.logger.error('Ошибка при получении идентификатора цепи:', error);\r\n        throw standardErrors.rpc.internal({\r\n          message: PROVIDER_ERROR_MESSAGES.FAILED_GET_CHAIN_ID,\r\n          data: { originalError: error },\r\n        });\r\n      }\r\n    }\r\n\r\n    return this._chainId;\r\n  }\r\n\r\n  private normalizeChainId(chainId: unknown): string {\r\n    if (typeof chainId === 'number') {\r\n      return `0x${chainId.toString(16)}`;\r\n    }\r\n\r\n    if (typeof chainId === 'string') {\r\n      return chainId.toLowerCase().startsWith('0x')\r\n        ? chainId.toLowerCase()\r\n        : `0x${Number.parseInt(chainId, 10).toString(16)}`;\r\n    }\r\n\r\n    throw standardErrors.rpc.internal(PROVIDER_ERROR_MESSAGES.INVALID_CHAIN_RESPONSE);\r\n  }\r\n\r\n  private async requestAccounts() {\r\n    try {\r\n      // TODO: Implement popup logic for proper authorization flow\r\n      // const accounts = await this.requestWithPopup<string[]>('eth_requestAccounts');\r\n\r\n      const accounts = await this.getAccounts(true);\r\n\r\n      if (accounts.length === 0) {\r\n        throw standardErrors.provider.unauthorized(PROVIDER_ERROR_MESSAGES.NO_ACCOUNTS_PROVIDED);\r\n      }\r\n\r\n      this.emitEvent('accountsChanged', accounts);\r\n      return accounts;\r\n    } catch (error) {\r\n      return Promise.reject(serializeError(error, 'eth_requestAccounts'));\r\n    }\r\n  }\r\n\r\n  private async isAuthorized(): Promise<boolean> {\r\n    try {\r\n      const accounts = await this.getAccounts();\r\n      return Boolean(accounts && accounts.length > 0);\r\n    } catch (error) {\r\n      this.logger.debug('Ошибка при проверке авторизации:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private isSupportedChain(chainId: string): boolean {\r\n    if (!chainId) return false;\r\n\r\n    const normalizedChainId = this.normalizeChainId(chainId);\r\n    return this._supportedChains.has(normalizedChainId);\r\n  }\r\n\r\n  private resetState(): void {\r\n    this._accounts = [];\r\n    this._chainId = null;\r\n    this._isConnected = false;\r\n    this._accountsLastUpdated = 0;\r\n    this._chainIdLastUpdated = 0;\r\n  }\r\n\r\n  private emitDisconnect(message: string): void {\r\n    this.emitEvent('disconnect', standardErrors.provider.disconnected(message));\r\n  }\r\n\r\n  private initializeMessageHandler(): this {\r\n    this.setupConnectionHandler();\r\n    this.setupMessageSubscription();\r\n    return this;\r\n  }\r\n\r\n  private setupConnectionHandler(): void {\r\n    this.communicator.verifyConnection().then(async (connect) => {\r\n      if (connect) {\r\n        try {\r\n          await this.handleInitialConnection();\r\n        } catch (error) {\r\n          this.logger.error('Ошибка при инициализации подключения:', error);\r\n          this.emitDisconnect('Ошибка при инициализации подключения');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private async handleInitialConnection(): Promise<void> {\r\n    const response = await this.communicator.send('web3', 'connect', undefined as never, {\r\n      requireAck: true,\r\n      bridgeId: this.bridge.bridgeId,\r\n    });\r\n\r\n    const chainId = this.normalizeChainId(response.payload.chainId);\r\n    this._isConnected = this.isSupportedChain(chainId);\r\n\r\n    if (!this._isConnected) {\r\n      this.emitUnsupportedChainDisconnect(chainId);\r\n      return;\r\n    }\r\n\r\n    this._chainId = chainId;\r\n    this._chainIdLastUpdated = Date.now();\r\n    this.emitEvent('connect', { chainId });\r\n\r\n    try {\r\n      const accounts = await this.getAccounts(true);\r\n      if (accounts.length === 0) {\r\n        this.logger.warn('Подключение установлено, но аккаунты не предоставлены');\r\n      }\r\n    } catch (error) {\r\n      this.logger.warn('Не удалось получить аккаунты при инициализации:', error);\r\n    }\r\n  }\r\n\r\n  private emitUnsupportedChainDisconnect(chainId: string): void {\r\n    this.emitEvent(\r\n      'disconnect',\r\n      standardErrors.provider.unsupportedChain(\r\n        PROVIDER_ERROR_MESSAGES.CHAIN_NOT_SUPPORTED(chainId),\r\n      ),\r\n    );\r\n  }\r\n\r\n  private setupMessageSubscription(): void {\r\n    this.communicator.subscribeToWildcard('web3', '*', (message) => {\r\n      if (!message || !message.payload) {\r\n        this.logger.debug('Получено сообщение без payload, игнорируем');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        this.handleWalletMessage(message);\r\n      } catch (error) {\r\n        this.logger.error('Ошибка при обработке сообщения:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  private handleWalletMessage(message: AnyDeserializedMessage): void {\r\n    if (!message.event) {\r\n      this.logger.warn('Получено сообщение без указания типа события', message);\r\n      return;\r\n    }\r\n\r\n    switch (message.event) {\r\n      case 'chainChanged':\r\n        this.handleChainChanged(message.payload?.chainId);\r\n        break;\r\n\r\n      case 'accountsChanged':\r\n        this.handleAccountsChanged(message.payload?.accounts);\r\n        break;\r\n\r\n      case 'message':\r\n        this.emitEvent('message', message.payload);\r\n        break;\r\n\r\n      case 'disconnect':\r\n        this.handleDisconnect(message.payload);\r\n        break;\r\n\r\n      default:\r\n        this.logger.debug(`Получено необработанное событие: ${message.event}`, message);\r\n    }\r\n  }\r\n\r\n  private handleDisconnect(payload: unknown): void {\r\n    this.resetState();\r\n    this.emitEvent(\r\n      'disconnect',\r\n      standardErrors.provider.disconnected(\r\n        typeof payload === 'string' ? payload : PROVIDER_ERROR_MESSAGES.USER_DISCONNECTED,\r\n      ),\r\n    );\r\n  }\r\n\r\n  private handleChainChanged(chainId: unknown): void {\r\n    try {\r\n      const normalizedChainId = this.normalizeChainId(chainId);\r\n\r\n      if (!this.isSupportedChain(normalizedChainId)) {\r\n        this._isConnected = false;\r\n        this.emitUnsupportedChainDisconnect(normalizedChainId);\r\n        return;\r\n      }\r\n\r\n      this._chainId = normalizedChainId;\r\n      this._chainIdLastUpdated = Date.now();\r\n\r\n      this._accounts = [];\r\n      this._accountsLastUpdated = 0;\r\n\r\n      this.emitEvent('chainChanged', normalizedChainId);\r\n\r\n      this.getAccounts(true).catch((error) =>\r\n        this.logger.warn('Не удалось получить аккаунты после смены сети:', error),\r\n      );\r\n    } catch (error) {\r\n      this.logger.error('Ошибка при обработке смены сети:', error);\r\n    }\r\n  }\r\n\r\n  private handleAccountsChanged(accounts: unknown): void {\r\n    try {\r\n      if (!Array.isArray(accounts)) {\r\n        this.logger.warn('Получены некорректные данные аккаунтов:', accounts);\r\n        return;\r\n      }\r\n\r\n      this._accounts = accounts;\r\n      this._accountsLastUpdated = Date.now();\r\n      this.emitEvent('accountsChanged', accounts);\r\n    } catch (error) {\r\n      this.logger.error('Ошибка при обработке смены аккаунтов:', error);\r\n    }\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backpack/sdk/src/provider/provider.ts b/backpack/sdk/src/provider/provider.ts
--- a/backpack/sdk/src/provider/provider.ts	(revision b24f16ffcb8103584162f4460c608bf7e2590f3c)
+++ b/backpack/sdk/src/provider/provider.ts	(date 1752483173487)
@@ -1,5 +1,6 @@
 import {
   type AnyDeserializedMessage,
+  type Channel,
   Communicator,
   type MethodParams,
   type MethodResult,
@@ -87,12 +88,14 @@
     'eth_sign',
     'personal_sign',
     'eth_signTypedData_v4',
+
     // Network management methods
     'wallet_addEthereumChain',
     'wallet_switchEthereumChain',
     'wallet_getPermissions',
     'wallet_requestPermissions',
     'wallet_watchAsset',
+
     // Additional methods
     'eth_blockNumber',
     'eth_call',
@@ -461,12 +464,27 @@
     });
   }
 
+  private handleOtherMessage(chanel: Channel, message: AnyDeserializedMessage): void {
+    if (!chanel) {
+      this.logger.warn('не корректный канал', chanel);
+      return;
+    }
+    if (chanel === 'swRuntime') {
+      this.emitEvent('message', {
+        type: message.event,
+        data: message.payload,
+      });
+    }
+  }
+
   private handleWalletMessage(message: AnyDeserializedMessage): void {
     if (!message.event) {
       this.logger.warn('Получено сообщение без указания типа события', message);
       return;
     }
 
+    this.handleOtherMessage(message.channel, message);
+
     switch (message.event) {
       case 'chainChanged':
         this.handleChainChanged(message.payload?.chainId);
@@ -475,10 +493,6 @@
       case 'accountsChanged':
         this.handleAccountsChanged(message.payload?.accounts);
         break;
-
-      case 'message':
-        this.emitEvent('message', message.payload);
-        break;
 
       case 'disconnect':
         this.handleDisconnect(message.payload);
Index: backpack/sdk/src/transport/communicator/create-communicator.ts
===================================================================
diff --git a/backpack/sdk/src/transport/communicator/create-communicator.ts b/backpack/sdk/src/transport/communicator/create-communicator.ts
deleted file mode 100644
--- a/backpack/sdk/src/transport/communicator/create-communicator.ts	(revision b24f16ffcb8103584162f4460c608bf7e2590f3c)
+++ /dev/null	(revision b24f16ffcb8103584162f4460c608bf7e2590f3c)
@@ -1,66 +0,0 @@
-/**
- * @description Автоопределение подходящего communicator
- */
-
-/// <reference types="chrome"/>
-
-import {ExtensionCommunicator} from './adapters/extension-communicator';
-import {PopupCommunicator} from './adapters/popup-communicator';
-import {WindowCommunicator} from './adapters/window-communicator';
-import {WorkerCommunicator} from './adapters/worker-communicator';
-import type {Channel, Communicator, SerializationOptions} from './types';
-
-/**
- * Интерфейс для объектов, поддерживающих метод postMessage
- */
-interface PostMessageWorker {
-  postMessage: (message: Record<string, unknown>, transfer?: Transferable[]) => void;
-}
-
-/**
- * Параметры для создания коммуникатора
- */
-interface CommunicatorParams extends SerializationOptions {
-  /** URL для pop-up окна, если используется PopupCommunicator */
-  popupUrl?: string;
-  /** Канал связи для коммуникатора */
-  channel: Channel;
-}
-
-/**
- * Создает подходящий коммуникатор на основе текущего окружения
- */
-export function createCommunicator(params: CommunicatorParams): Communicator {
-  const { channel, popupUrl, ...serializationOptions } = params;
-
-  // находимся ли мы в расширении браузера
-  if (
-    typeof window !== 'undefined' &&
-    typeof window.chrome !== 'undefined' &&
-    window.chrome.runtime &&
-    window.chrome.runtime.id
-  ) {
-    return new ExtensionCommunicator(channel, serializationOptions);
-  }
-
-  // находимся ли мы в Web Worker
-  if (
-    typeof self !== 'undefined' &&
-    typeof (self as PostMessageWorker).postMessage === 'function' &&
-    typeof window === 'undefined'
-  ) {
-    return new WorkerCommunicator(channel, serializationOptions);
-  }
-
-  // Если указан URL для popup, используем PopupCommunicator
-  if (popupUrl) {
-    return new PopupCommunicator(popupUrl, channel, serializationOptions);
-  }
-
-  // По умолчанию WindowCommunicator для обычного окна браузера
-  if (typeof window !== 'undefined') {
-    return new WindowCommunicator(channel, serializationOptions);
-  }
-
-  throw new Error('Unable to detect suitable communicator for this environment');
-}
Index: apps/extension/src/shims/react-native.js
===================================================================
diff --git a/apps/extension/src/shims/react-native.js b/apps/extension/src/shims/react-native.js
deleted file mode 100644
--- a/apps/extension/src/shims/react-native.js	(revision b24f16ffcb8103584162f4460c608bf7e2590f3c)
+++ /dev/null	(revision b24f16ffcb8103584162f4460c608bf7e2590f3c)
@@ -1,13 +0,0 @@
-// Заглушка для react-native
-const ReactNative = {
-
-  Platform: {
-    OS: 'web',
-    select: (options) => options.web || options.default,
-  },
-  StyleSheet: {
-    create: (styles) => styles,
-  },
-};
-
-export default ReactNative;
Index: .idea/biome.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"BiomeSettings\">\r\n    <option name=\"applySafeFixesOnSave\" value=\"true\" />\r\n    <option name=\"configurationMode\" value=\"DISABLED\" />\r\n    <option name=\"enableLspFormat\" value=\"true\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/biome.xml b/.idea/biome.xml
--- a/.idea/biome.xml	(revision b24f16ffcb8103584162f4460c608bf7e2590f3c)
+++ b/.idea/biome.xml	(date 1752476871846)
@@ -1,8 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="BiomeSettings">
-    <option name="applySafeFixesOnSave" value="true" />
-    <option name="configurationMode" value="DISABLED" />
     <option name="enableLspFormat" value="true" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"28900854-3b89-46fa-94b9-012d511ff68f\" name=\"Changes\" comment=\"update\">\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extension/src/shims/react-native.js\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extension/vite.background.config.ts\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extension/vite.content.config.ts\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extension/vite.injected.config.ts\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extention2/.gitignore\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extention2/README.md\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extention2/background.ts\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extention2/content.ts\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extention2/injected.ts\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extention2/manifest.config.ts\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extention2/package.json\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extention2/public/logo.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extention2/src/assets/crx.svg\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extention2/src/assets/react.svg\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extention2/src/assets/vite.svg\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extention2/src/components/HelloWorld.tsx\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extention2/src/content/main.tsx\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extention2/src/content/views/App.css\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extention2/src/content/views/App.tsx\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extention2/src/popup/App.css\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extention2/src/popup/App.tsx\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extention2/src/popup/index.css\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extention2/src/popup/index.html\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extention2/src/popup/main.tsx\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extention2/tsconfig.app.json\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extention2/tsconfig.json\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extention2/tsconfig.node.json\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extention2/utils/browser-polyfill.ts\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extention2/vite.background.config.ts\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extention2/vite.config.ts\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extention2/vite.content.config.ts\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/apps/extention2/vite.injected.config.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/apps/extension/manifest.chrome.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/apps/extension/manifest.chrome.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/apps/extension/manifest.firefox.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/apps/extension/manifest.firefox.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/apps/extension/package.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/apps/extension/package.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/apps/extension/src/pages/options/index.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/apps/extension/src/pages/options/index.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/apps/extension/src/pages/options/index.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/apps/extension/src/pages/options/index.tsx\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/apps/extension/src/pages/popup/Options.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/apps/extension/src/pages/popup/Options.tsx\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/apps/extension/src/pages/popup/index.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/apps/extension/src/pages/popup/index.tsx\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/apps/extension/src/utils/browser-polyfill.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/apps/extension/src/utils/browser-polyfill.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/apps/extension/vite.config.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/apps/extension/vite.config.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/package.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/package.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/yarn.lock\" beforeDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"HTML File\" />\r\n        <option value=\"TypeScript JSX File\" />\r\n        <option value=\"TypeScript File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"dev\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitLabMergeRequestFiltersHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPENED&quot;,\r\n    &quot;assignee&quot;: {\r\n      &quot;type&quot;: &quot;org.jetbrains.plugins.gitlab.mergerequest.ui.filters.GitLabMergeRequestsFiltersValue.MergeRequestsMemberFilterValue.MergeRequestsAssigneeFilterValue&quot;,\r\n      &quot;username&quot;: &quot;imshavlovsky&quot;,\r\n      &quot;fullname&quot;: &quot;Igor&quot;\r\n    }\r\n  }\r\n}</component>\r\n  <component name=\"GitLabMergeRequestsSettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;first&quot;: &quot;https://gitlab.whattofarm.io/wallet/wallet-client.git&quot;,\r\n    &quot;second&quot;: &quot;f3f2e9dd-1961-4aba-9e30-f86200dbdad1&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2zlu83eUlv4Es1gH04clpoBquI7\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"DefaultHtmlFileTemplate\": \"HTML File\",\r\n    \"ModuleVcsDetector.initialDetectionPerformed\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"git-widget-placeholder\": \"SDK/transport/communicator\",\r\n    \"junie.onboarding.icon.badge.shown\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/shavl/WebstormProjects/wallet-client/apps/extention2\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.stylelint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.stylelint\": \"\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_interpreter_path\": \"node\",\r\n    \"nodejs_package_manager_path\": \"C:\\\\Users\\\\shavl\\\\WebstormProjects\\\\wallet-client\\\\.yarn\\\\releases\\\\yarn-4.9.2.cjs\",\r\n    \"npm.extension > build.executor\": \"Run\",\r\n    \"npm.extension > build:all.executor\": \"Run\",\r\n    \"npm.extension > build:extension.executor\": \"Run\",\r\n    \"npm.extension > dev.executor\": \"Run\",\r\n    \"npm.extention2 > build.executor\": \"Run\",\r\n    \"npm.extention2 > build:all.executor\": \"Run\",\r\n    \"npm.sdk > build.executor\": \"Run\",\r\n    \"settings.editor.selected.configurable\": \"Settings.Biome\",\r\n    \"ts.external.directory.path\": \"C:\\\\Users\\\\shavl\\\\WebstormProjects\\\\wallet-client\\\\node_modules\\\\typescript\\\\lib\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\shavl\\WebstormProjects\\wallet-client\\apps\\extention2\" />\r\n      <recent name=\"C:\\Users\\shavl\\WebstormProjects\\wallet-client\\apps\\extention2\\src\" />\r\n      <recent name=\"C:\\Users\\shavl\\WebstormProjects\\wallet-client\\apps\\extension\" />\r\n      <recent name=\"C:\\Users\\shavl\\WebstormProjects\\wallet-client\\apps\\extension\\src\\pages\\options\" />\r\n      <recent name=\"C:\\Users\\shavl\\WebstormProjects\\wallet-client\\apps\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\shavl\\WebstormProjects\\wallet-client\\apps\\extention2\" />\r\n      <recent name=\"C:\\Users\\shavl\\WebstormProjects\\wallet-client\\apps\\extension\\dist\" />\r\n      <recent name=\"C:\\Users\\shavl\\WebstormProjects\\wallet-client\" />\r\n      <recent name=\"C:\\Users\\shavl\\WebstormProjects\\wallet-client\\apps\\extension\" />\r\n      <recent name=\"C:\\Users\\shavl\\WebstormProjects\\wallet-client\\apps\\extension\\public\\icons\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"npm.extention2 &gt; build\">\r\n    <configuration name=\"extension &gt; build:all\" type=\"js.build_tools.npm\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <package-json value=\"$PROJECT_DIR$/apps/extension/package.json\" />\r\n      <command value=\"run\" />\r\n      <scripts>\r\n        <script value=\"build:all\" />\r\n      </scripts>\r\n      <node-interpreter value=\"project\" />\r\n      <envs />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"extension &gt; build:extension\" type=\"js.build_tools.npm\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <package-json value=\"$PROJECT_DIR$/apps/extension/package.json\" />\r\n      <command value=\"run\" />\r\n      <scripts>\r\n        <script value=\"build:extension\" />\r\n      </scripts>\r\n      <node-interpreter value=\"project\" />\r\n      <envs />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"extention2 &gt; build\" type=\"js.build_tools.npm\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <package-json value=\"$PROJECT_DIR$/apps/extention2/package.json\" />\r\n      <command value=\"run\" />\r\n      <scripts>\r\n        <script value=\"build\" />\r\n      </scripts>\r\n      <node-interpreter value=\"project\" />\r\n      <envs />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"extention2 &gt; build:all\" type=\"js.build_tools.npm\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <package-json value=\"$PROJECT_DIR$/apps/extention2/package.json\" />\r\n      <command value=\"run\" />\r\n      <scripts>\r\n        <script value=\"build:all\" />\r\n      </scripts>\r\n      <node-interpreter value=\"project\" />\r\n      <envs />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"sdk &gt; build\" type=\"js.build_tools.npm\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <package-json value=\"$PROJECT_DIR$/backpack/sdk/package.json\" />\r\n      <command value=\"run\" />\r\n      <scripts>\r\n        <script value=\"build\" />\r\n      </scripts>\r\n      <node-interpreter value=\"project\" />\r\n      <envs />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"npm.extention2 &gt; build\" />\r\n        <item itemvalue=\"npm.extention2 &gt; build:all\" />\r\n        <item itemvalue=\"npm.extension &gt; build:all\" />\r\n        <item itemvalue=\"npm.extension &gt; build:extension\" />\r\n        <item itemvalue=\"npm.sdk &gt; build\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-09060db00ec0-JavaScript-WS-251.26927.40\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SvnConfiguration\">\r\n    <configuration>C:\\Users\\shavl\\AppData\\Roaming\\Subversion</configuration>\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"28900854-3b89-46fa-94b9-012d511ff68f\" name=\"Changes\" comment=\"\" />\r\n      <created>1752317818628</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1752317818628</updated>\r\n      <workItem from=\"1752317820267\" duration=\"2954000\" />\r\n      <workItem from=\"1752320869443\" duration=\"5615000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1752320808000</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1752320808000</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n    <option name=\"additionalRoots\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/backpack/sdk/dist\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"UnknownFeatures\">\r\n    <option featureType=\"com.intellij.fileTypeFactory\" implementationName=\"package.json\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"update\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"update\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision b24f16ffcb8103584162f4460c608bf7e2590f3c)
+++ b/.idea/workspace.xml	(date 1752501888436)
@@ -4,51 +4,14 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="28900854-3b89-46fa-94b9-012d511ff68f" name="Changes" comment="update">
-      <change afterPath="$PROJECT_DIR$/apps/extension/src/shims/react-native.js" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extension/vite.background.config.ts" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extension/vite.content.config.ts" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extension/vite.injected.config.ts" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extention2/.gitignore" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extention2/README.md" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extention2/background.ts" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extention2/content.ts" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extention2/injected.ts" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extention2/manifest.config.ts" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extention2/package.json" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extention2/public/logo.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extention2/src/assets/crx.svg" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extention2/src/assets/react.svg" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extention2/src/assets/vite.svg" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extention2/src/components/HelloWorld.tsx" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extention2/src/content/main.tsx" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extention2/src/content/views/App.css" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extention2/src/content/views/App.tsx" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extention2/src/popup/App.css" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extention2/src/popup/App.tsx" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extention2/src/popup/index.css" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extention2/src/popup/index.html" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extention2/src/popup/main.tsx" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extention2/tsconfig.app.json" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extention2/tsconfig.json" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extention2/tsconfig.node.json" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extention2/utils/browser-polyfill.ts" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extention2/vite.background.config.ts" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extention2/vite.config.ts" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extention2/vite.content.config.ts" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/apps/extention2/vite.injected.config.ts" afterDir="false" />
+    <list default="true" id="28900854-3b89-46fa-94b9-012d511ff68f" name="Changes" comment="feat(sdk/provider): Add error constants and enhance `Provider` for better error handling, caching, and chain/account management">
+      <change beforePath="$PROJECT_DIR$/.idea/biome.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/biome.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/apps/extension/manifest.chrome.json" beforeDir="false" afterPath="$PROJECT_DIR$/apps/extension/manifest.chrome.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/apps/extension/manifest.firefox.json" beforeDir="false" afterPath="$PROJECT_DIR$/apps/extension/manifest.firefox.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/apps/extension/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/apps/extension/package.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/apps/extension/src/pages/options/index.html" beforeDir="false" afterPath="$PROJECT_DIR$/apps/extension/src/pages/options/index.html" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/apps/extension/src/pages/options/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/apps/extension/src/pages/options/index.tsx" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/apps/extension/src/pages/popup/Options.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/apps/extension/src/pages/popup/Options.tsx" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/apps/extension/src/pages/popup/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/apps/extension/src/pages/popup/index.tsx" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/apps/extension/src/utils/browser-polyfill.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/extension/src/utils/browser-polyfill.ts" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/apps/extension/vite.config.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/extension/vite.config.ts" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/yarn.lock" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/apps/extension/src/background.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/extension/src/background.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/apps/extension/src/shims/react-native.js" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/backpack/sdk/src/provider/provider.ts" beforeDir="false" afterPath="$PROJECT_DIR$/backpack/sdk/src/provider/provider.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/backpack/sdk/src/transport/communicator/create-communicator.ts" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/backpack/sdk/src/transport/communicator/types/channel-method-map.types.ts" beforeDir="false" afterPath="$PROJECT_DIR$/backpack/sdk/src/transport/communicator/types/channel-method-map.types.ts" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -63,11 +26,14 @@
         <option value="TypeScript File" />
       </list>
     </option>
+  </component>
+  <component name="FormatOnSaveOptions">
+    <option name="myRunOnSave" value="true" />
   </component>
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="dev" />
+        <entry key="$PROJECT_DIR$" value="SDK/default" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -102,7 +68,7 @@
     "ModuleVcsDetector.initialDetectionPerformed": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "RunOnceActivity.git.unshallow": "true",
-    "git-widget-placeholder": "SDK/transport/communicator",
+    "git-widget-placeholder": "SDK/default",
     "junie.onboarding.icon.badge.shown": "true",
     "last_opened_file_path": "C:/Users/shavl/WebstormProjects/wallet-client/apps/extention2",
     "node.js.detected.package.eslint": "true",
@@ -141,7 +107,7 @@
       <recent name="C:\Users\shavl\WebstormProjects\wallet-client\apps\extension\public\icons" />
     </key>
   </component>
-  <component name="RunManager" selected="npm.extention2 &gt; build">
+  <component name="RunManager" selected="npm.extension &gt; build:all">
     <configuration name="extension &gt; build:all" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
       <package-json value="$PROJECT_DIR$/apps/extension/package.json" />
       <command value="run" />
@@ -162,26 +128,6 @@
       <envs />
       <method v="2" />
     </configuration>
-    <configuration name="extention2 &gt; build" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
-      <package-json value="$PROJECT_DIR$/apps/extention2/package.json" />
-      <command value="run" />
-      <scripts>
-        <script value="build" />
-      </scripts>
-      <node-interpreter value="project" />
-      <envs />
-      <method v="2" />
-    </configuration>
-    <configuration name="extention2 &gt; build:all" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
-      <package-json value="$PROJECT_DIR$/apps/extention2/package.json" />
-      <command value="run" />
-      <scripts>
-        <script value="build:all" />
-      </scripts>
-      <node-interpreter value="project" />
-      <envs />
-      <method v="2" />
-    </configuration>
     <configuration name="sdk &gt; build" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
       <package-json value="$PROJECT_DIR$/backpack/sdk/package.json" />
       <command value="run" />
@@ -194,8 +140,6 @@
     </configuration>
     <recent_temporary>
       <list>
-        <item itemvalue="npm.extention2 &gt; build" />
-        <item itemvalue="npm.extention2 &gt; build:all" />
         <item itemvalue="npm.extension &gt; build:all" />
         <item itemvalue="npm.extension &gt; build:extension" />
         <item itemvalue="npm.sdk &gt; build" />
@@ -220,7 +164,12 @@
       <option name="presentableId" value="Default" />
       <updated>1752317818628</updated>
       <workItem from="1752317820267" duration="2954000" />
-      <workItem from="1752320869443" duration="5615000" />
+      <workItem from="1752320869443" duration="6522000" />
+      <workItem from="1752392716705" duration="26000" />
+      <workItem from="1752475801474" duration="6913000" />
+      <workItem from="1752486588771" duration="25000" />
+      <workItem from="1752490762377" duration="4510000" />
+      <workItem from="1752497540742" duration="3033000" />
     </task>
     <task id="LOCAL-00001" summary="update">
       <option name="closed" value="true" />
@@ -230,7 +179,23 @@
       <option name="project" value="LOCAL" />
       <updated>1752320808000</updated>
     </task>
-    <option name="localTasksCounter" value="2" />
+    <task id="LOCAL-00002" summary="update">
+      <option name="closed" value="true" />
+      <created>1752327347997</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1752327347997</updated>
+    </task>
+    <task id="LOCAL-00003" summary="feat(sdk/provider): Add error constants and enhance `Provider` for better error handling, caching, and chain/account management">
+      <option name="closed" value="true" />
+      <created>1752481084662</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1752481084662</updated>
+    </task>
+    <option name="localTasksCounter" value="4" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -256,8 +221,12 @@
     </option>
   </component>
   <component name="VcsManagerConfiguration">
+    <option name="CHECK_CODE_CLEANUP_BEFORE_PROJECT_COMMIT" value="true" />
     <MESSAGE value="update" />
-    <option name="LAST_COMMIT_MESSAGE" value="update" />
+    <MESSAGE value="feat(sdk/provider): Add error constants and enhance `Provider` for better error handling, caching, and chain/account management" />
+    <option name="LAST_COMMIT_MESSAGE" value="feat(sdk/provider): Add error constants and enhance `Provider` for better error handling, caching, and chain/account management" />
+    <option name="OPTIMIZE_IMPORTS_BEFORE_PROJECT_COMMIT" value="true" />
+    <option name="REFORMAT_BEFORE_PROJECT_COMMIT" value="true" />
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
